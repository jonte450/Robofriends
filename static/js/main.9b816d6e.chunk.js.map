{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","robots.js","components/Add_robot.js","components/Delete_robo.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","username","AddRobot","state","change","e","setState","target","value","clearFields","add","preventDefault","addToList","this","href","onClick","React","Component","DeleteBox","update","deleteRobo","App","onSearchChange","event","userInfo","robots_list","length","new_arr","filter","obj","parseInt","filteredRobots","robot","toLowerCase","includes","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9b816d6e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n      <h1>ID:{id}</h1>\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={robots[i].id}\n              name={robots[i].name}\n              email={robots[i].email}\n              />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n    <h1>Search Robot By Name</h1>\n      <input\n        className='pa2 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n\nexport default robots\n","import\tReact from 'react';\n\nexport default class AddRobot extends React.Component{\n\n  state = {name: \"\",\n           username: \"\",\n           email: \"\"\n        };\n\n   change = e =>{\n   \tthis.setState({[e.target.name]: e.target.value});\n   \te.target.value = '';\n   }\n\n   clearFields = () =>{\n   \tthis.setState({name:'',\n   \t\t           username:'',\n   \t\t           email:''\n     });\n   }   \n\n  add = (e) =>{\n  e.preventDefault();\n  this.props.addToList(this.state);\n  this.clearFields();\n  };\n\n  render(){\n  \treturn (\n    <div>\n         <h1>Add Robot By Name</h1>\n         \n      <input\n        className='pa2 ba b--green bg-lightest-blue'\n        name=\"name\"\n        value={this.state.name}\n        onChange={e => this.change(e)}\n        placeholder='Add Name'\n      />\n\n     <input\n       className='pa2 ba b--green bg-lightest-blue'\n       name=\"username\"\n       value={this.state.username}\n       onChange={e => this.change(e)}\n       placeholder='Add Username'\n    />\n\n    <input\n       className='pa2 ba b--green bg-lightest-blue'\n       name=\"email\"\n       value={this.state.email}\n       onChange={e => this.change(e)}\n       placeholder='Add Email'\n    />\n\n      <a className=\"f50 link dim ph3 pv2 mb2 dib white bg-dark-green\" \n         href=\"#0\"\n         onClick={e => this.add(e)}>\n         Add Robot\n      </a>\n\n\n    </div>\n );\n}\n}\n\n\n","import React from 'react';\n\nexport default class DeleteBox extends React.Component{\n\n  state = {id:''};\n\n  change = e =>{\n    this.setState({[e.target.name]: e.target.value});\n    e.target.value = '';\n  }\n\n  update = e => {\n    e.preventDefault();\n    this.props.deleteRobo(this.state);\n    this.setState({id:''});\n  }\n\n\n  render (){\n  return (\n    <div className='pa2'>\n    <h1>Delete Robot By ID </h1>\n      <input\n      name=\"id\"\n      value={this.state.id}\n      className='pa2 ba b--green bg-lightest-blue'\n      placeholder='Write ID of Robot'\n      onChange={e => this.change(e)}\n      />\n      <a className=\"f50 link dim ph3 pv2 mb2 dib white bg-dark-green\" \n         href=\"#0\"\n         onClick={e => this.update(e)}>\n         Delete Robot\n      </a>    </div>\n  );\n }\n}","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport robots from '../robots.js'\nimport AddRobots from '../components/Add_robot';\nimport DeleteBox from '../components/Delete_robo'\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots_list: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n  }\n\n  addToList = userInfo =>{\n    userInfo.id = this.state.robots_list.length + 1;\n    this.setState({robots_list:[...this.state.robots_list,userInfo]});\n    //console.log(userInfo);\n  };\n\n  deleteRobo = userInfo =>{\n  var arr = [...this.state.robots_list];\n  var new_arr = arr.filter(function(obj){ return obj.id !== parseInt(userInfo.id);});\n  this.setState({robots_list:new_arr}); \n  //Todo Send an message if it is not in the list\n }\n\n  render() {\n    const { robots_list, searchfield } = this.state;\n    const filteredRobots = robots_list.filter(robot =>{\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n    return !robots.length ?\n      <h1>Loading!!!</h1> :\n      (\n        <div className='tc'>\n          <h1 className='f1'>RoboFriends</h1>\n          <AddRobots addToList={this.addToList}/>\n          <SearchBox searchChange={this.onSearchChange}/>\n          <DeleteBox deleteRobo={this.deleteRobo}/>\n          <Scroll>\n            <CardList robots={filteredRobots} />\n          </Scroll>\n        </div>\n      );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}